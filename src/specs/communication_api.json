{
  "openapi": "3.1.0",
  "info": {
    "title": "School Communication API",
    "description": "API for managing school communications including feeds, events, and announcements",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/schools/{school_id}/feeds": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Create Feed",
        "description": "Create a new feed for a school.",
        "operationId": "create_feed_v1_schools__school_id__feeds_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feeds",
        "description": "Get all feeds for a school.",
        "operationId": "get_feeds_v1_schools__school_id__feeds_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedRead"
                  },
                  "title": "Response Get Feeds V1 Schools  School Id  Feeds Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}": {
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed",
        "description": "Get a feed by ID within a school.",
        "operationId": "get_feed_v1_schools__school_id__feeds__feed_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the feed to get"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "feeds"
        ],
        "summary": "Update Feed",
        "description": "Update a feed within a school.",
        "operationId": "update_feed_v1_schools__school_id__feeds__feed_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the feed to update"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Delete Feed",
        "description": "Delete a feed from a school.",
        "operationId": "delete_feed_v1_schools__school_id__feeds__feed_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the feed to delete"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/persons": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Add Persons To Feed",
        "description": "Get all persons associated with a feed.",
        "operationId": "add_persons_to_feed_v1_schools__school_id__feeds__feed_id__persons_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedPersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Remove Persons From Feed",
        "description": "Get all persons associated with a feed.",
        "operationId": "remove_persons_from_feed_v1_schools__school_id__feeds__feed_id__persons_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedPersonCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get persons for a feed",
        "description": "Get all persons associated with a feed.\n\nArgs:\n    school_id: The school ID\n    feed_id: The feed ID\n    filters: Optional filter string\n    \nReturns:\n    List of persons associated with the feed",
        "operationId": "get_feed_persons_v1_schools__school_id__feeds__feed_id__persons_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonRead"
                  },
                  "title": "Response Get Feed Persons V1 Schools  School Id  Feeds  Feed Id  Persons Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/likes/{person_id}": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Like Feed",
        "description": "Add a like to a feed from a person.",
        "operationId": "like_feed_v1_schools__school_id__feeds__feed_id__likes__person_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Unlike Feed",
        "description": "Remove a like from a feed.",
        "operationId": "unlike_feed_v1_schools__school_id__feeds__feed_id__likes__person_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed Like",
        "description": "Get a like for a specific feed and person.",
        "operationId": "get_feed_like_v1_schools__school_id__feeds__feed_id__likes__person_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/views": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Add Feed View",
        "description": "Add a view to a feed from a person.",
        "operationId": "add_feed_view_v1_schools__school_id__feeds__feed_id__views_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedViewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Find Feed Views",
        "description": "Find feed views",
        "operationId": "find_feed_views_v1_schools__school_id__feeds__feed_id__views_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedViewRead"
                  },
                  "title": "Response Find Feed Views V1 Schools  School Id  Feeds  Feed Id  Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/views/{view_id}": {
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Remove Feed View",
        "description": "Remove a view by its ID.",
        "operationId": "remove_feed_view_v1_schools__school_id__feeds__feed_id__views__view_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed View",
        "description": "Get a view by its ID.",
        "operationId": "get_feed_view_v1_schools__school_id__feeds__feed_id__views__view_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/likes": {
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed Likes",
        "description": "Get all likes for a feed within a school.",
        "operationId": "get_feed_likes_v1_schools__school_id__feeds__feed_id__likes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedLikeRead"
                  },
                  "title": "Response Get Feed Likes V1 Schools  School Id  Feeds  Feed Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/comments": {
      "post": {
        "tags": [
          "feeds"
        ],
        "summary": "Add Feed Comment",
        "description": "Add a comment to a feed from a person.",
        "operationId": "add_feed_comment_v1_schools__school_id__feeds__feed_id__comments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Find Feed Comments",
        "description": "Find feed comments with optional filtering for replies.\n\n- When parent_comment_id is None, returns top-level comments\n- When parent_comment_id is provided, returns replies to that comment",
        "operationId": "find_feed_comments_v1_schools__school_id__feeds__feed_id__comments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Comment ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedCommentRead"
                  },
                  "title": "Response Find Feed Comments V1 Schools  School Id  Feeds  Feed Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/feeds/{feed_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "feeds"
        ],
        "summary": "Remove Feed Comment",
        "description": "Remove a comment by its ID.",
        "operationId": "remove_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feeds"
        ],
        "summary": "Get Feed Comment",
        "description": "Get a comment by its ID.",
        "operationId": "get_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "feeds"
        ],
        "summary": "Update Feed Comment",
        "description": "Update a comment's text.",
        "operationId": "update_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "feed_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Feed ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event",
        "description": "Create a new event for a school.",
        "operationId": "create_event_v1_schools__school_id__events_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Events",
        "description": "Get all events for a school.",
        "operationId": "get_events_v1_schools__school_id__events_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventRead"
                  },
                  "title": "Response Get Events V1 Schools  School Id  Events Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event",
        "description": "Get a event by ID within a school.",
        "operationId": "get_event_v1_schools__school_id__events__event_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the event to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Update Event",
        "description": "Update a event within a school.",
        "operationId": "update_event_v1_schools__school_id__events__event_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the event to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Delete Event",
        "description": "Delete a event from a school.",
        "operationId": "delete_event_v1_schools__school_id__events__event_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the event to delete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/persons": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Persons To Event",
        "description": "Get all persons associated with a event.",
        "operationId": "add_persons_to_event_v1_schools__school_id__events__event_id__persons_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Remove Persons From Event",
        "description": "Get all persons associated with a event.",
        "operationId": "remove_persons_from_event_v1_schools__school_id__events__event_id__persons_delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPersonCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get persons for a event",
        "description": "Get all persons associated with a event.\n\nArgs:\n    school_id: The school ID\n    event_id: The event ID\n    filters: Optional filter string\n    \nReturns:\n    List of persons associated with the event",
        "operationId": "get_event_persons_v1_schools__school_id__events__event_id__persons_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonRead"
                  },
                  "title": "Response Get Event Persons V1 Schools  School Id  Events  Event Id  Persons Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/likes/{person_id}": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Like Event",
        "description": "Add a like to a event from a person.",
        "operationId": "like_event_v1_schools__school_id__events__event_id__likes__person_id__post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Unlike Event",
        "description": "Remove a like from a event.",
        "operationId": "unlike_event_v1_schools__school_id__events__event_id__likes__person_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Like",
        "description": "Get a like for a specific event and person.",
        "operationId": "get_event_like_v1_schools__school_id__events__event_id__likes__person_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/views": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Event View",
        "description": "Add a view to a event from a person.",
        "operationId": "add_event_view_v1_schools__school_id__events__event_id__views_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventViewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Find Event Views",
        "description": "Find event views",
        "operationId": "find_event_views_v1_schools__school_id__events__event_id__views_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventViewRead"
                  },
                  "title": "Response Find Event Views V1 Schools  School Id  Events  Event Id  Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/views/{view_id}": {
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Remove Event View",
        "description": "Remove a view by its ID.",
        "operationId": "remove_event_view_v1_schools__school_id__events__event_id__views__view_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event View",
        "description": "Get a view by its ID.",
        "operationId": "get_event_view_v1_schools__school_id__events__event_id__views__view_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/likes": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Likes",
        "description": "Get all likes for a event within a school.",
        "operationId": "get_event_likes_v1_schools__school_id__events__event_id__likes_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventLikeRead"
                  },
                  "title": "Response Get Event Likes V1 Schools  School Id  Events  Event Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/comments": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Add Event Comment",
        "description": "Add a comment to a event from a person.",
        "operationId": "add_event_comment_v1_schools__school_id__events__event_id__comments_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Find Event Comments",
        "description": "Find event comments with optional filtering for replies.\n\n- When parent_comment_id is None, returns top-level comments\n- When parent_comment_id is provided, returns replies to that comment",
        "operationId": "find_event_comments_v1_schools__school_id__events__event_id__comments_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCommentRead"
                  },
                  "title": "Response Find Event Comments V1 Schools  School Id  Events  Event Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "events"
        ],
        "summary": "Remove Event Comment",
        "description": "Remove a comment by its ID.",
        "operationId": "remove_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Comment",
        "description": "Get a comment by its ID.",
        "operationId": "get_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Update Event Comment",
        "description": "Update a comment's text.",
        "operationId": "update_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/persons/{person_id}": {
      "put": {
        "tags": [
          "events"
        ],
        "summary": "Update Confirmation",
        "description": "Update an event confirmation .",
        "operationId": "update_confirmation_v1_schools__school_id__events__event_id__persons__person_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_confirmation_v1_schools__school_id__events__event_id__persons__person_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPersonRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/events/{event_id}/confirmations": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get persons for a event",
        "description": "Get all persons confirmations with a event.\n\nArgs:\n    school_id: The school ID\n    event_id: The event ID\n    offset: The offset for pagination\n    limit: The limit for pagination\n    \nReturns:\n    List of persons associated with the event",
        "operationId": "get_event_confirmations_v1_schools__school_id__events__event_id__confirmations_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event ID"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventPersonRead"
                  },
                  "title": "Response Get Event Confirmations V1 Schools  School Id  Events  Event Id  Confirmations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements": {
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Create Announcement",
        "description": "Create a new announcement for a school.",
        "operationId": "create_announcement_v1_schools__school_id__announcements_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcements",
        "description": "Get all announcements for a school.",
        "operationId": "get_announcements_v1_schools__school_id__announcements_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementRead"
                  },
                  "title": "Response Get Announcements V1 Schools  School Id  Announcements Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}": {
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement",
        "description": "Get a announcement by ID within a school.",
        "operationId": "get_announcement_v1_schools__school_id__announcements__announcement_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the announcement to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "announcements"
        ],
        "summary": "Update Announcement",
        "description": "Update a announcement within a school.",
        "operationId": "update_announcement_v1_schools__school_id__announcements__announcement_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the announcement to update"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Delete Announcement",
        "description": "Delete a announcement from a school.",
        "operationId": "delete_announcement_v1_schools__school_id__announcements__announcement_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the announcement to delete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/persons": {
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Add Persons To Announcement",
        "description": "Get all persons associated with a announcement.",
        "operationId": "add_persons_to_announcement_v1_schools__school_id__announcements__announcement_id__persons_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementPersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Remove Persons From Announcement",
        "description": "Get all persons associated with a announcement.",
        "operationId": "remove_persons_from_announcement_v1_schools__school_id__announcements__announcement_id__persons_delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementPersonCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get persons for a announcement",
        "description": "Get all persons associated with a announcement.\n\nArgs:\n    school_id: The school ID\n    announcement_id: The announcement ID\n    filters: Optional filter string\n    \nReturns:\n    List of persons associated with the announcement",
        "operationId": "get_announcement_persons_v1_schools__school_id__announcements__announcement_id__persons_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonRead"
                  },
                  "title": "Response Get Announcement Persons V1 Schools  School Id  Announcements  Announcement Id  Persons Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/likes/{person_id}": {
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Like Announcement",
        "description": "Add a like to a announcement from a person.",
        "operationId": "like_announcement_v1_schools__school_id__announcements__announcement_id__likes__person_id__post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Unlike Announcement",
        "description": "Remove a like from a announcement.",
        "operationId": "unlike_announcement_v1_schools__school_id__announcements__announcement_id__likes__person_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement Like",
        "description": "Get a like for a specific announcement and person.",
        "operationId": "get_announcement_like_v1_schools__school_id__announcements__announcement_id__likes__person_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/views": {
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Add Announcement View",
        "description": "Add a view to a announcement from a person.",
        "operationId": "add_announcement_view_v1_schools__school_id__announcements__announcement_id__views_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementViewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Find Announcement Views",
        "description": "Find announcement views",
        "operationId": "find_announcement_views_v1_schools__school_id__announcements__announcement_id__views_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementViewRead"
                  },
                  "title": "Response Find Announcement Views V1 Schools  School Id  Announcements  Announcement Id  Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/views/{view_id}": {
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Remove Announcement View",
        "description": "Remove a view by its ID.",
        "operationId": "remove_announcement_view_v1_schools__school_id__announcements__announcement_id__views__view_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement View",
        "description": "Get a view by its ID.",
        "operationId": "get_announcement_view_v1_schools__school_id__announcements__announcement_id__views__view_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/likes": {
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement Likes",
        "description": "Get all likes for a announcement within a school.",
        "operationId": "get_announcement_likes_v1_schools__school_id__announcements__announcement_id__likes_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementLikeRead"
                  },
                  "title": "Response Get Announcement Likes V1 Schools  School Id  Announcements  Announcement Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/comments": {
      "post": {
        "tags": [
          "announcements"
        ],
        "summary": "Add Announcement Comment",
        "description": "Add a comment to a announcement from a person.",
        "operationId": "add_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Find Announcement Comments",
        "description": "Find announcement comments with optional filtering for replies.\n\n- When parent_comment_id is None, returns top-level comments\n- When parent_comment_id is provided, returns replies to that comment",
        "operationId": "find_announcement_comments_v1_schools__school_id__announcements__announcement_id__comments_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementCommentRead"
                  },
                  "title": "Response Find Announcement Comments V1 Schools  School Id  Announcements  Announcement Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/announcements/{announcement_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "announcements"
        ],
        "summary": "Remove Announcement Comment",
        "description": "Remove a comment by its ID.",
        "operationId": "remove_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "announcements"
        ],
        "summary": "Get Announcement Comment",
        "description": "Get a comment by its ID.",
        "operationId": "get_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "announcements"
        ],
        "summary": "Update Announcement Comment",
        "description": "Update a comment's text.",
        "operationId": "update_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "announcement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Announcement ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats": {
      "get": {
        "tags": [
          "chats"
        ],
        "summary": "Get Chats",
        "description": "Get chats for a school with optional filtering.\nUse person_id filter to get chats for a specific person.",
        "operationId": "get_chats_v1_schools__school_id__chats_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatRead"
                  },
                  "title": "Response Get Chats V1 Schools  School Id  Chats Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "chats"
        ],
        "summary": "Create Chat",
        "description": "Create a new chat for a school.",
        "operationId": "create_chat_v1_schools__school_id__chats_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}": {
      "get": {
        "tags": [
          "chats"
        ],
        "summary": "Get Chat",
        "description": "Get a specific chat by ID.",
        "operationId": "get_chat_v1_schools__school_id__chats__chat_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "chats"
        ],
        "summary": "Update Chat",
        "description": "Update a chat.",
        "operationId": "update_chat_v1_schools__school_id__chats__chat_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "chats"
        ],
        "summary": "Delete Chat",
        "description": "Delete a chat (soft delete).",
        "operationId": "delete_chat_v1_schools__school_id__chats__chat_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/messages": {
      "post": {
        "tags": [
          "chats"
        ],
        "summary": "Send Message",
        "description": "Send a message to a chat.",
        "operationId": "send_message_v1_schools__school_id__chats__chat_id__messages_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatMessageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "chats"
        ],
        "summary": "Get Chat Message",
        "description": "Get chat messages with optional filtering.\n\nExamples of filters:\n- Get messages from a specific person: ?filters=person_id::eq::user123\n- Get messages created after a certain date: ?filters=created_at::gt::2023-01-01T00:00:00Z\n- Get messages containing specific text: ?filters=content::ilike::hello",
        "operationId": "get_chat_message_v1_schools__school_id__chats__chat_id__messages_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMessageRead"
                  },
                  "title": "Response Get Chat Message V1 Schools  School Id  Chats  Chat Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/messages/{message_id}": {
      "delete": {
        "tags": [
          "chats"
        ],
        "summary": "Get Chat Message",
        "description": "Delete a message from a chat.",
        "operationId": "get_chat_message_v1_schools__school_id__chats__chat_id__messages__message_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message ID"
            }
          },
          {
            "name": "hard_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, permanently delete the member instead of soft delete",
              "default": false,
              "title": "Hard Delete"
            },
            "description": "If true, permanently delete the member instead of soft delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/messages/{parent_message_id}/thread": {
      "get": {
        "tags": [
          "chats"
        ],
        "summary": "Get Message Thread",
        "description": "Get all replies in a thread for a specific parent message with optional filtering.\n\nThis endpoint returns all messages that are direct replies to the specified parent message,\nsorted by creation time in ascending order (oldest first).\n\nExamples of filters:\n- Get messages from a specific person: ?filters=person_id::eq::user123\n- Get messages created after a certain date: ?filters=created_at::gt::2023-01-01T00:00:00Z\n- Get messages containing specific text: ?filters=content::ilike::hello",
        "operationId": "get_message_thread_v1_schools__school_id__chats__chat_id__messages__parent_message_id__thread_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          },
          {
            "name": "parent_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Message ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMessageRead"
                  },
                  "title": "Response Get Message Thread V1 Schools  School Id  Chats  Chat Id  Messages  Parent Message Id  Thread Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/members": {
      "post": {
        "tags": [
          "chats"
        ],
        "summary": "Add Chat Member",
        "description": "Add a member to a chat.",
        "operationId": "add_chat_member_v1_schools__school_id__chats__chat_id__members_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMemberCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatMemberRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "chats"
        ],
        "summary": "Get Chat Members",
        "description": "Get chat members",
        "operationId": "get_chat_members_v1_schools__school_id__chats__chat_id__members_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/members/batch": {
      "post": {
        "tags": [
          "chats"
        ],
        "summary": "Add Chat Members",
        "description": "Add multiple members to a chat in a single operation.\n\nThis endpoint allows adding multiple members at once, reducing the need for multiple API calls.\nIf a person in the list doesn't exist, it will be skipped without affecting other members.",
        "operationId": "add_chat_members_v1_schools__school_id__chats__chat_id__members_batch_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMemberBatchCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMemberRead"
                  },
                  "title": "Response Add Chat Members V1 Schools  School Id  Chats  Chat Id  Members Batch Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/chats/{chat_id}/members/{person_id}": {
      "delete": {
        "tags": [
          "chats"
        ],
        "summary": "Remove Chat Member",
        "description": "Remove a member from a chat.",
        "operationId": "remove_chat_member_v1_schools__school_id__chats__chat_id__members__person_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Chat ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages": {
      "post": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Create Direct Message",
        "description": "Create a new direct message.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    person_id: The sender's person ID\n    direct_message_data: The direct message data\n    \nReturns:\n    Created DirectMessageRead",
        "operationId": "create_direct_message_v1_schools__school_id__direct_messages_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DirectMessageCreate"
                  }
                ],
                "title": "Direct Message Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Get Direct Messages",
        "description": "Get direct messages for a person with optional filtering.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    person_id: The requesting person's ID\n    filters: Optional filter string\n    offset: Number of records to skip\n    limit: Maximum number of records to return\n    \nReturns:\n    List of DirectMessageRead objects",
        "operationId": "get_direct_messages_v1_schools__school_id__direct_messages_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DirectMessageRead"
                  },
                  "title": "Response Get Direct Messages V1 Schools  School Id  Direct Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/{direct_message_id}": {
      "get": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Get Direct Message",
        "description": "Get a direct message by ID.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    direct_message_id: The ID of the direct message\n    person_id: The requesting person's ID\n    \nReturns:\n    DirectMessageDetailRead",
        "operationId": "get_direct_message_v1_schools__school_id__direct_messages__direct_message_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessageDetailRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Update Direct Message",
        "description": "Update a direct message.\n\nOnly the sender can update a direct message, and only if it's a draft.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    direct_message_id: The ID of the direct message to update\n    person_id: The updating person's ID\n    direct_message_data: The update data\n    \nReturns:\n    Updated DirectMessageRead",
        "operationId": "update_direct_message_v1_schools__school_id__direct_messages__direct_message_id__put",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The updating person's ID",
              "title": "Person Id"
            },
            "description": "The updating person's ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DirectMessageUpdate"
                  }
                ],
                "title": "Direct Message Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessageRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Delete Direct Message",
        "description": "Delete a direct message for a person.\n\nThis will hide the message for the requesting person but not for other recipients.\nIf the sender deletes the message, it will be marked as deleted but still visible to recipients.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    direct_message_id: The ID of the direct message to delete\n    person_id: The deleting person's ID",
        "operationId": "delete_direct_message_v1_schools__school_id__direct_messages__direct_message_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The deleting person's ID",
              "title": "Person Id"
            },
            "description": "The deleting person's ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/threads/{thread_id}": {
      "get": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Get Thread",
        "description": "Get a thread of direct messages.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    thread_id: The ID of the thread (usually the first message's ID)\n    person_id: The requesting person's ID\n    filters: Optional filter string\n    \nReturns:\n    DirectMessageThreadRead",
        "operationId": "get_thread_v1_schools__school_id__direct_messages_threads__thread_id__get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "thread_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Thread ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The requesting person's ID",
              "title": "Person Id"
            },
            "description": "The requesting person's ID"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessageThreadRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/attachments/upload": {
      "post": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Upload Attachment",
        "description": "Upload a file to be attached to a direct message.",
        "operationId": "upload_attachment_v1_schools__school_id__direct_messages_attachments_upload_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_attachment_v1_schools__school_id__direct_messages_attachments_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/{direct_message_id}/recipients": {
      "post": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Add Recipient",
        "description": "Add a recipient to a direct message.\n\nOnly the sender can add recipients to a message.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    direct_message_id: The ID of the direct message\n    recipient_data: The recipient data\n    person_id: The requesting person's ID\n    \nReturns:\n    DirectMessageRecipientRead",
        "operationId": "add_recipient_v1_schools__school_id__direct_messages__direct_message_id__recipients_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The requesting person's ID (must be the sender)",
              "title": "Person Id"
            },
            "description": "The requesting person's ID (must be the sender)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectMessageRecipientCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectMessageRecipientRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/{direct_message_id}/recipients/{recipient_person_id}": {
      "delete": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Remove Recipient",
        "description": "Remove a recipient from a direct message.\n\nOnly the sender or the recipient themselves can remove a recipient.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    direct_message_id: The ID of the direct message\n    recipient_person_id: The ID of the recipient to remove\n    person_id: The requesting person's ID",
        "operationId": "remove_recipient_v1_schools__school_id__direct_messages__direct_message_id__recipients__recipient_person_id__delete",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          },
          {
            "name": "recipient_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recipient Person ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The requesting person's ID",
              "title": "Person Id"
            },
            "description": "The requesting person's ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/mark-read": {
      "post": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Mark Messages Read",
        "description": "Mark multiple direct messages as read.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    message_ids: List of direct message IDs to mark as read\n    person_id: The reading person's ID",
        "operationId": "mark_messages_read_v1_schools__school_id__direct_messages_mark_read_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The reading person's ID",
              "title": "Person Id"
            },
            "description": "The reading person's ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": "Message Ids"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/unread-count": {
      "get": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Get Unread Count",
        "description": "Get the count of unread direct messages for a person.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    person_id: The person's ID\n    \nReturns:\n    Dictionary with unread count",
        "operationId": "get_unread_count_v1_schools__school_id__direct_messages_unread_count_get",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The person's ID",
              "title": "Person Id"
            },
            "description": "The person's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Unread Count V1 Schools  School Id  Direct Messages Unread Count Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/direct-messages/{direct_message_id}/recipients/{recipient_person_id}/reads": {
      "post": {
        "tags": [
          "direct-messages"
        ],
        "summary": "Mark Message Read",
        "description": "Mark multiple direct messages as read.\n\nArgs:\n    direct_message_service: The direct message service\n    school_id: The school ID\n    message_ids: List of direct message IDs to mark as read\n    person_id: The reading person's ID",
        "operationId": "mark_message_read_v1_schools__school_id__direct_messages__direct_message_id__recipients__recipient_person_id__reads_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "direct_message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Direct Message ID"
            }
          },
          {
            "name": "recipient_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Recipient Person ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/attachments": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Upload Attachment",
        "operationId": "upload_attachment_v1_schools__school_id__attachments_post",
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "persist",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, persisted into the database",
              "default": false,
              "title": "Persist"
            },
            "description": "If true, persisted into the database"
          },
          {
            "name": "is_inline",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Indicates if the attachment is inline",
              "default": false,
              "title": "Is Inline"
            },
            "description": "Indicates if the attachment is inline"
          },
          {
            "name": "inline_position",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Position of the inline attachment",
              "default": 0,
              "title": "Inline Position"
            },
            "description": "Position of the inline attachment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_attachment_v1_schools__school_id__attachments_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/attachments/{attachment_id}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Get Attachment",
        "operationId": "get_attachment_v1_schools__school_id__attachments__attachment_id__get",
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Attachment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Create Assignment",
        "description": "Create a new assignment for a school.",
        "operationId": "create_assignment_v1_schools__school_id__assignments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignments",
        "description": "Get all assignments for a school.",
        "operationId": "get_assignments_v1_schools__school_id__assignments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentRead"
                  },
                  "title": "Response Get Assignments V1 Schools  School Id  Assignments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment",
        "description": "Get a assignment by ID within a school.",
        "operationId": "get_assignment_v1_schools__school_id__assignments__assignment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the assignment to get"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assignments"
        ],
        "summary": "Update Assignment",
        "description": "Update a assignment within a school.",
        "operationId": "update_assignment_v1_schools__school_id__assignments__assignment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the assignment to update"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Delete Assignment",
        "description": "Delete a assignment from a school.",
        "operationId": "delete_assignment_v1_schools__school_id__assignments__assignment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "The ID of the assignment to delete"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/persons": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Add Persons To Assignment",
        "description": "Get all persons associated with a assignment.",
        "operationId": "add_persons_to_assignment_v1_schools__school_id__assignments__assignment_id__persons_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentPersonCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Remove Persons From Assignment",
        "description": "Get all persons associated with a assignment.",
        "operationId": "remove_persons_from_assignment_v1_schools__school_id__assignments__assignment_id__persons_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentPersonCreate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get persons for a assignment",
        "description": "Get all persons associated with a assignment.\n\nArgs:\n    school_id: The school ID\n    assignment_id: The assignment ID\n    filters: Optional filter string\n    \nReturns:\n    List of persons associated with the assignment",
        "operationId": "get_assignment_persons_v1_schools__school_id__assignments__assignment_id__persons_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonRead"
                  },
                  "title": "Response Get Assignment Persons V1 Schools  School Id  Assignments  Assignment Id  Persons Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/likes/{person_id}": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Like Assignment",
        "description": "Add a like to a assignment from a person.",
        "operationId": "like_assignment_v1_schools__school_id__assignments__assignment_id__likes__person_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Unlike Assignment",
        "description": "Remove a like from a assignment.",
        "operationId": "unlike_assignment_v1_schools__school_id__assignments__assignment_id__likes__person_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment Like",
        "description": "Get a like for a specific assignment and person.",
        "operationId": "get_assignment_like_v1_schools__school_id__assignments__assignment_id__likes__person_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentLikeRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/views": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Add Assignment View",
        "description": "Add a view to a assignment from a person.",
        "operationId": "add_assignment_view_v1_schools__school_id__assignments__assignment_id__views_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentViewCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Find Assignment Views",
        "description": "Find assignment views",
        "operationId": "find_assignment_views_v1_schools__school_id__assignments__assignment_id__views_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field:operator:value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field:operator:value,...'"
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentViewRead"
                  },
                  "title": "Response Find Assignment Views V1 Schools  School Id  Assignments  Assignment Id  Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/views/{view_id}": {
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Remove Assignment View",
        "description": "Remove a view by its ID.",
        "operationId": "remove_assignment_view_v1_schools__school_id__assignments__assignment_id__views__view_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment View",
        "description": "Get a view by its ID.",
        "operationId": "get_assignment_view_v1_schools__school_id__assignments__assignment_id__views__view_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "View ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentViewRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/likes": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment Likes",
        "description": "Get all likes for a assignment within a school.",
        "operationId": "get_assignment_likes_v1_schools__school_id__assignments__assignment_id__likes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentLikeRead"
                  },
                  "title": "Response Get Assignment Likes V1 Schools  School Id  Assignments  Assignment Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/comments": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Add Assignment Comment",
        "description": "Add a comment to a assignment from a person.",
        "operationId": "add_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Find Assignment Comments",
        "description": "Find assignment comments with optional filtering for replies.\n\n- When parent_comment_id is None, returns top-level comments\n- When parent_comment_id is provided, returns replies to that comment",
        "operationId": "find_assignment_comments_v1_schools__school_id__assignments__assignment_id__comments_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Comment ID"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter string in the format 'field::operator::value,...'",
              "title": "Filters"
            },
            "description": "Filter string in the format 'field::operator::value,...'"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCommentRead"
                  },
                  "title": "Response Find Assignment Comments V1 Schools  School Id  Assignments  Assignment Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Remove Assignment Comment",
        "description": "Remove a comment by its ID.",
        "operationId": "remove_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment Comment",
        "description": "Get a comment by its ID.",
        "operationId": "get_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assignments"
        ],
        "summary": "Update Assignment Comment",
        "description": "Update a comment's text.",
        "operationId": "update_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Comment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentCommentRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/persons/{person_id}/submissions": {
      "post": {
        "tags": [
          "assignments"
        ],
        "summary": "Add Assignment Submission",
        "description": "Add an assignment submission.",
        "operationId": "add_assignment_submission_v1_schools__school_id__assignments__assignment_id__persons__person_id__submissions_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssignmentSubmissionCreate"
                  }
                ],
                "title": "Submission data to create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentSubmissionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment Person Submission",
        "description": "Add an assignment submission.",
        "operationId": "get_assignment_person_submission_v1_schools__school_id__assignments__assignment_id__persons__person_id__submissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Person ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSubmissionRead"
                  },
                  "title": "Response Get Assignment Person Submission V1 Schools  School Id  Assignments  Assignment Id  Persons  Person Id  Submissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/submissions": {
      "get": {
        "tags": [
          "assignments"
        ],
        "summary": "Get Assignment Submission",
        "description": "Add an assignment submission.",
        "operationId": "get_assignment_submission_v1_schools__school_id__assignments__assignment_id__submissions_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "assignment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Assignment ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSubmissionRead"
                  },
                  "title": "Response Get Assignment Submission V1 Schools  School Id  Assignments  Assignment Id  Submissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/schools/{school_id}/assignments/{assignment_id}/submissions/{submission_id}": {
      "patch": {
        "tags": [
          "assignments"
        ],
        "summary": "Update Assignment Person Submission",
        "description": "Add an assignment submission.",
        "operationId": "update_assignment_person_submission_v1_schools__school_id__assignments__assignment_id__submissions__submission_id__patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Submission ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssignmentSubmissionUpdate"
                  }
                ],
                "title": "Submission data to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentSubmissionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignments"
        ],
        "summary": "Delete Assignment Person Submission",
        "description": "Add an assignment submission.",
        "operationId": "delete_assignment_person_submission_v1_schools__school_id__assignments__assignment_id__submissions__submission_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "school_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "School ID"
            }
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Submission ID"
            }
          },
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Device-Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnnouncementCommentCreate": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_announcement_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Announcement Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment"
        ],
        "title": "AnnouncementCommentCreate"
      },
      "AnnouncementCommentRead": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_announcement_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Announcement Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "AnnouncementCommentRead"
      },
      "AnnouncementCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "publisher_person_id": {
            "type": "string",
            "title": "Publisher Person Id"
          },
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "publisher_person_id",
          "persons"
        ],
        "title": "AnnouncementCreate"
      },
      "AnnouncementLikeRead": {
        "properties": {
          "announcement_id": {
            "type": "string",
            "format": "uuid",
            "title": "Announcement Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "announcement_id",
          "person_id",
          "created_at"
        ],
        "title": "AnnouncementLikeRead"
      },
      "AnnouncementPersonCreate": {
        "properties": {
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons",
            "default": []
          }
        },
        "type": "object",
        "title": "AnnouncementPersonCreate"
      },
      "AnnouncementRead": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "publisher": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_liked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Liked"
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "created_at",
          "modified_at",
          "created_by",
          "modified_by"
        ],
        "title": "AnnouncementRead"
      },
      "AnnouncementUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "accept_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept Comments"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized"
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "AnnouncementUpdate"
      },
      "AnnouncementViewCreate": {
        "properties": {
          "announcement_id": {
            "type": "string",
            "format": "uuid",
            "title": "Announcement Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          }
        },
        "type": "object",
        "required": [
          "announcement_id",
          "person_id"
        ],
        "title": "AnnouncementViewCreate"
      },
      "AnnouncementViewRead": {
        "properties": {
          "announcement_id": {
            "type": "string",
            "format": "uuid",
            "title": "Announcement Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "announcement_id",
          "person_id",
          "id",
          "created_at"
        ],
        "title": "AnnouncementViewRead"
      },
      "AssignmentCommentCreate": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_assignment_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Assignment Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment"
        ],
        "title": "AssignmentCommentCreate"
      },
      "AssignmentCommentRead": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_assignment_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Assignment Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "assignment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignment Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment",
          "id",
          "assignment_id",
          "created_at",
          "modified_at"
        ],
        "title": "AssignmentCommentRead"
      },
      "AssignmentCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "title": "Due Date"
          },
          "subject_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Id"
          },
          "subject_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Name"
          },
          "publisher_person_id": {
            "type": "string",
            "title": "Publisher Person Id"
          },
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "due_date",
          "publisher_person_id",
          "persons"
        ],
        "title": "AssignmentCreate"
      },
      "AssignmentLikeRead": {
        "properties": {
          "assignment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignment Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "assignment_id",
          "person_id",
          "created_at"
        ],
        "title": "AssignmentLikeRead"
      },
      "AssignmentPersonCreate": {
        "properties": {
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons",
            "default": []
          }
        },
        "type": "object",
        "title": "AssignmentPersonCreate"
      },
      "AssignmentRead": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "title": "Due Date"
          },
          "subject_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Id"
          },
          "subject_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Name"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "publisher": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignment Status"
          },
          "user_liked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Liked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "due_date",
          "id",
          "school_id",
          "created_at",
          "modified_at",
          "modified_by"
        ],
        "title": "AssignmentRead"
      },
      "AssignmentSubmissionCreate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "submission_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "mark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mark"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "AssignmentSubmissionCreate"
      },
      "AssignmentSubmissionRead": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "submission_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "mark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mark"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "assignment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignment Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "submitted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted At"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "person": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonRead"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "assignment_id",
          "person_id"
        ],
        "title": "AssignmentSubmissionRead"
      },
      "AssignmentSubmissionUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "submission_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Status"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "mark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mark"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "AssignmentSubmissionUpdate"
      },
      "AssignmentUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "accept_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept Comments"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized"
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "subject_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Id"
          },
          "subject_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject Name"
          }
        },
        "type": "object",
        "title": "AssignmentUpdate"
      },
      "AssignmentViewCreate": {
        "properties": {
          "assignment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignment Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          }
        },
        "type": "object",
        "required": [
          "assignment_id",
          "person_id"
        ],
        "title": "AssignmentViewCreate"
      },
      "AssignmentViewRead": {
        "properties": {
          "assignment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Assignment Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "assignment_id",
          "person_id",
          "id",
          "created_at"
        ],
        "title": "AssignmentViewRead"
      },
      "AttachmentCreate": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_path": {
            "type": "string",
            "title": "File Path"
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Id"
          },
          "is_inline": {
            "type": "boolean",
            "title": "Is Inline",
            "default": false
          },
          "inline_position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inline Position"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "public_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Url"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "school_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "School Id"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "file_path"
        ],
        "title": "AttachmentCreate"
      },
      "AttachmentRead": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_path": {
            "type": "string",
            "title": "File Path"
          },
          "file_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Type"
          },
          "file_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Size"
          },
          "content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Id"
          },
          "is_inline": {
            "type": "boolean",
            "title": "Is Inline",
            "default": false
          },
          "inline_position": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inline Position"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "public_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Url"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "uploaded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded At"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "file_path",
          "id",
          "school_id"
        ],
        "title": "AttachmentRead"
      },
      "Body_update_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__put": {
        "properties": {
          "comment": {
            "type": "string",
            "title": "New comment text"
          }
        },
        "type": "object",
        "required": [
          "comment"
        ],
        "title": "Body_update_announcement_comment_v1_schools__school_id__announcements__announcement_id__comments__comment_id__put"
      },
      "Body_update_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__put": {
        "properties": {
          "comment": {
            "type": "string",
            "title": "New comment text"
          }
        },
        "type": "object",
        "required": [
          "comment"
        ],
        "title": "Body_update_assignment_comment_v1_schools__school_id__assignments__assignment_id__comments__comment_id__put"
      },
      "Body_update_confirmation_v1_schools__school_id__events__event_id__persons__person_id__put": {
        "properties": {
          "confirmed": {
            "type": "boolean",
            "title": "Confirmed"
          }
        },
        "type": "object",
        "required": [
          "confirmed"
        ],
        "title": "Body_update_confirmation_v1_schools__school_id__events__event_id__persons__person_id__put"
      },
      "Body_update_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__put": {
        "properties": {
          "comment": {
            "type": "string",
            "title": "New comment text"
          }
        },
        "type": "object",
        "required": [
          "comment"
        ],
        "title": "Body_update_event_comment_v1_schools__school_id__events__event_id__comments__comment_id__put"
      },
      "Body_update_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__put": {
        "properties": {
          "comment": {
            "type": "string",
            "title": "New comment text"
          }
        },
        "type": "object",
        "required": [
          "comment"
        ],
        "title": "Body_update_feed_comment_v1_schools__school_id__feeds__feed_id__comments__comment_id__put"
      },
      "Body_upload_attachment_v1_schools__school_id__attachments_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_attachment_v1_schools__school_id__attachments_post"
      },
      "Body_upload_attachment_v1_schools__school_id__direct_messages_attachments_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "is_inline": {
            "type": "boolean",
            "title": "Is Inline",
            "default": false
          },
          "content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Id"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_attachment_v1_schools__school_id__direct_messages_attachments_upload_post"
      },
      "ChatCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "active_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active From"
          },
          "active_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Until"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "group_scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope"
          },
          "group_scope_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope Id"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "person_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Types"
          },
          "persons": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Persons"
          }
        },
        "type": "object",
        "title": "ChatCreate"
      },
      "ChatMemberBatchCreate": {
        "properties": {
          "members": {
            "items": {
              "$ref": "#/components/schemas/ChatMemberCreate"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "members"
        ],
        "title": "ChatMemberBatchCreate"
      },
      "ChatMemberCreate": {
        "properties": {
          "chat_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "person_id"
        ],
        "title": "ChatMemberCreate"
      },
      "ChatMemberRead": {
        "properties": {
          "chat_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "joined_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joined At"
          },
          "last_read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Read At"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "person_id"
        ],
        "title": "ChatMemberRead"
      },
      "ChatMessageCreate": {
        "properties": {
          "chat_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_chat_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Chat Message Id"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "person_id"
        ],
        "title": "ChatMessageCreate"
      },
      "ChatMessageRead": {
        "properties": {
          "chat_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_chat_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Chat Message Id"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "id"
        ],
        "title": "ChatMessageRead"
      },
      "ChatRead": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "active_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active From"
          },
          "active_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Until"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "group_scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope"
          },
          "group_scope_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope Id"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "person_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Types"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id"
        ],
        "title": "ChatRead"
      },
      "ChatUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "active_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active From"
          },
          "active_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Until"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "group_scope": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope"
          },
          "group_scope_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Scope Id"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "person_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Types"
          }
        },
        "type": "object",
        "title": "ChatUpdate"
      },
      "DirectMessageCreate": {
        "properties": {
          "school_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "School Id"
          },
          "sender_id": {
            "type": "string",
            "title": "Sender Id"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "sent"
          },
          "recipients": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recipients"
          },
          "parent_direct_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Direct Message Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft",
            "default": false
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "sender_id",
          "subject",
          "body",
          "recipients"
        ],
        "title": "DirectMessageCreate",
        "description": "Create a new Direct Message"
      },
      "DirectMessageDetailRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "sender_id": {
            "type": "string",
            "title": "Sender Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "parent_direct_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Direct Message Id"
          },
          "has_attachments": {
            "type": "boolean",
            "title": "Has Attachments"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id"
          },
          "recipient_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Status"
          },
          "is_read": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Read"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/DirectMessageRecipientRead"
            },
            "type": "array",
            "title": "Recipients",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "subject",
          "body",
          "sender_id",
          "has_attachments",
          "created_at",
          "updated_at"
        ],
        "title": "DirectMessageDetailRead",
        "description": "Read a Direct Message with detailed information"
      },
      "DirectMessageRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "sender_id": {
            "type": "string",
            "title": "Sender Id"
          },
          "thread_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thread Id"
          },
          "parent_direct_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Direct Message Id"
          },
          "has_attachments": {
            "type": "boolean",
            "title": "Has Attachments"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "recipient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Id"
          },
          "recipient_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recipient Status"
          },
          "is_read": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Read"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "subject",
          "body",
          "sender_id",
          "has_attachments",
          "created_at",
          "updated_at"
        ],
        "title": "DirectMessageRead",
        "description": "Read a Direct Message"
      },
      "DirectMessageRecipientCreate": {
        "properties": {
          "recipient_id": {
            "type": "string",
            "title": "Recipient Id"
          },
          "direct_message_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Message Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DirectMessageRecipientStatus"
              }
            ],
            "default": "active"
          }
        },
        "type": "object",
        "required": [
          "recipient_id"
        ],
        "title": "DirectMessageRecipientCreate",
        "description": "Create a new Direct Message Recipient"
      },
      "DirectMessageRecipientRead": {
        "properties": {
          "direct_message_id": {
            "type": "string",
            "format": "uuid",
            "title": "Direct Message Id"
          },
          "recipient_id": {
            "type": "string",
            "title": "Recipient Id"
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "status": {
            "$ref": "#/components/schemas/DirectMessageRecipientStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "direct_message_id",
          "recipient_id",
          "is_read",
          "status",
          "created_at"
        ],
        "title": "DirectMessageRecipientRead",
        "description": "Read a Direct Message Recipient"
      },
      "DirectMessageRecipientStatus": {
        "type": "string",
        "enum": [
          "active",
          "deleted"
        ],
        "title": "DirectMessageRecipientStatus"
      },
      "DirectMessageThreadRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/DirectMessageRead"
            },
            "type": "array",
            "title": "Messages"
          },
          "total_messages": {
            "type": "integer",
            "title": "Total Messages"
          },
          "unread_count": {
            "type": "integer",
            "title": "Unread Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "subject",
          "messages",
          "total_messages",
          "unread_count"
        ],
        "title": "DirectMessageThreadRead",
        "description": "Read a Direct Message Thread"
      },
      "DirectMessageUpdate": {
        "properties": {
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "DirectMessageUpdate",
        "description": "Update an existing Direct Message"
      },
      "EventCommentCreate": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_event_comment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Event Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment"
        ],
        "title": "EventCommentCreate"
      },
      "EventCommentRead": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_event_comment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Event Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment",
          "id",
          "created_at",
          "modified_at"
        ],
        "title": "EventCommentRead"
      },
      "EventCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "acept_comments": {
            "type": "boolean",
            "title": "Acept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "publisher_person_id": {
            "type": "string",
            "title": "Publisher Person Id"
          },
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "publisher_person_id",
          "persons"
        ],
        "title": "EventCreate"
      },
      "EventLikeRead": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "person_id",
          "created_at"
        ],
        "title": "EventLikeRead"
      },
      "EventPersonCreate": {
        "properties": {
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons",
            "default": []
          }
        },
        "type": "object",
        "title": "EventPersonCreate"
      },
      "EventPersonRead": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "confirmed": {
            "type": "boolean",
            "title": "Confirmed",
            "default": false
          },
          "confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmed At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "modified_at"
        ],
        "title": "EventPersonRead"
      },
      "EventRead": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "acept_comments": {
            "type": "boolean",
            "title": "Acept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "publisher": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_liked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Liked"
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "created_at",
          "modified_at",
          "created_by",
          "modified_by"
        ],
        "title": "EventRead"
      },
      "EventUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "acept_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acept Comments"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized"
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "EventUpdate"
      },
      "EventViewCreate": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "person_id"
        ],
        "title": "EventViewCreate"
      },
      "EventViewRead": {
        "properties": {
          "event_id": {
            "type": "string",
            "format": "uuid",
            "title": "Event Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "person_id",
          "id",
          "created_at"
        ],
        "title": "EventViewRead"
      },
      "FeedCommentCreate": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_feed_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Feed Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment"
        ],
        "title": "FeedCommentCreate"
      },
      "FeedCommentRead": {
        "properties": {
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "parent_feed_comment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Feed Comment Id"
          },
          "comment": {
            "type": "string",
            "minLength": 1,
            "title": "Comment"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feed_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feed Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "comment",
          "id",
          "feed_id",
          "created_at",
          "modified_at"
        ],
        "title": "FeedCommentRead"
      },
      "FeedCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "publisher_person_id": {
            "type": "string",
            "title": "Publisher Person Id"
          },
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "publisher_person_id",
          "persons"
        ],
        "title": "FeedCreate"
      },
      "FeedLikeRead": {
        "properties": {
          "feed_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feed Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "feed_id",
          "person_id",
          "created_at"
        ],
        "title": "FeedLikeRead"
      },
      "FeedPersonCreate": {
        "properties": {
          "persons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Persons",
            "default": []
          }
        },
        "type": "object",
        "title": "FeedPersonCreate"
      },
      "FeedRead": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "accept_comments": {
            "type": "boolean",
            "title": "Accept Comments",
            "default": true
          },
          "views": {
            "type": "integer",
            "minimum": 0,
            "title": "Views",
            "default": 0
          },
          "likes": {
            "type": "integer",
            "minimum": 0,
            "title": "Likes",
            "default": 0
          },
          "comments": {
            "type": "integer",
            "minimum": 0,
            "title": "Comments",
            "default": 0
          },
          "authorized": {
            "type": "boolean",
            "title": "Authorized",
            "default": false
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "academic_year": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Year"
          },
          "academic_stages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Stages"
          },
          "academic_programs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Programs"
          },
          "academic_modalities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Modalities"
          },
          "academic_program_years": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Program Years"
          },
          "academic_groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic Groups"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "publisher": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonRead"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_liked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Liked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "school_id",
          "created_at",
          "modified_at",
          "modified_by"
        ],
        "title": "FeedRead"
      },
      "FeedUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "modified_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By"
          },
          "accept_comments": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept Comments"
          },
          "authorized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized"
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "authorized_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized On"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AttachmentCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "title": "FeedUpdate"
      },
      "FeedViewCreate": {
        "properties": {
          "feed_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feed Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          }
        },
        "type": "object",
        "required": [
          "feed_id",
          "person_id"
        ],
        "title": "FeedViewCreate"
      },
      "FeedViewRead": {
        "properties": {
          "feed_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feed Id"
          },
          "person_id": {
            "type": "string",
            "title": "Person Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "feed_id",
          "person_id",
          "id",
          "created_at"
        ],
        "title": "FeedViewRead"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PersonRead": {
        "properties": {
          "school_id": {
            "type": "integer",
            "title": "School Id"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "paternal_surname": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Paternal Surname"
          },
          "maternal_surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maternal Surname"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "school_id",
          "id"
        ],
        "title": "PersonRead"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {

            },
            "tokenUrl": "token"
          }
        }
      }
    }
  }
}
